<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.S20220604.ProductMapper">

	<!-- 내 상품 리스트 -->
	<select id="geProductMylist" parameterType="String" resultType="Product">
		SELECT *
		FROM product
		WHERE user_id=#{user_id}
		and pro_status = 1 
	</select>
	
	<!-- 대분류 get -->
	<select id="geProinfoListAll" resultType="Product_Info">
		SELECT *
		FROM product_info
		WHERE pro_type2 = 999
	</select>
	
	<!-- 중분류 get -->
	<select id="geProinfoList2All" parameterType="int" resultType="Product_Info">
	<![CDATA[
		SELECT pro_type2, pro_content
	 	FROM product_info
	 	WHERE PRO_TYPE1 = #{pro_type1}
        AND   PRO_TYPE2 <> 999
        ]]>
	</select>
	
	<!-- 상품 등록하기 -->
	<insert id="geProductInsert" parameterType="Product" >
		INSERT INTO product VALUES
								 (seq_pro_num.nextval, 
								 #{pro_type1}, 
								 #{pro_type2}, 
								 #{user_id}, 
								 #{pro_price}, 
								 #{pro_title}, 
								 #{pro_write}, 
								 #{pro_photo}, 
								 #{pro_pic}, 
								 sysdate, 
								 #{amount}, 
								 0, 
								 1)
	</insert>
	
	<!-- 상품 삭제하기 -->
	<delete id="geProductDelete" parameterType="int">
		update product set pro_status = 2 where pro_num=#{pro_num}
	</delete>
	
	<!-- 총 삼품 갯수 -->
	<select id="kgeProductTotal"  parameterType="Product" resultType="int">
    
		SELECT Count(*) FROM product 
		where pro_status = 1
		And pro_type1    = #{pro_type1}
        <choose>
		    <when test="pro_type2 != '999'">And pro_type2 = #{pro_type2}</when>
		</choose>
        <choose>
		    <when test="pro_type2 == '999'">And pro_type2 != #{pro_type2}</when>
		</choose>
	</select>
	
	<!-- 상품 목록 -->
	<select id="geProductListBypro_type1" parameterType="Product" resultType="Product">
	
	    SELECT *
		FROM (
		        SELECT rownum rn ,  a.*
		        FROM  (select * from product 
				        where pro_status = 1 
				        and   pro_type1    = #{pro_type1} 
				       <choose>
						    <when test="pro_type2 != '999'">And pro_type2 = #{pro_type2}</when>
						</choose>
				        <choose>
						    <when test="pro_type2 == '999'">And pro_type2 != #{pro_type2}</when>
						</choose>
		        		order by pro_num
		        		) a
		     )
		WHERE  rn between #{start} AND  #{end}
	</select>
	
	<!-- 제품 상세 페이지 -->
	 <select id="geProductDetail" parameterType="int" resultType="Product">
		SELECT p.*,m.sell_name, m.sell_photo FROM product p , member m
		WHERE p.pro_num = #{pro_num}
		and   p.user_id = m.user_id(+)
		and   p.pro_status = 1
	</select> 
	
	<!-- checkProduct(좋아요 추가)에 넣기(아작스 사용) -->
	<insert id="goProdcutCheckInsert" parameterType="Product">
		INSERT INTO check_product VALUES (#{pro_num}, #{user_id})
	</insert>
	
	<update id="geProductUpdate" parameterType="Product">
		update product set pro_title=#{pro_title},
						   pro_price=#{pro_price},
		                   pro_photo=#{pro_photo},
		                   pro_write=#{pro_write},
		                   pro_pic=#{pro_pic},
		                   amount=#{amount}
		 where pro_num=#{pro_num}
	</update>
	
	<!-- 장바구니 추가하기(메인 장바구니에 user_id가 있는지 확인하는 logic) -->
	<select id="geProductBaskectCheck" parameterType="Product" resultType="int">
		select basket_num from main_basket where user_id = #{user_id}
	</select>
	
	<!-- 상품을 장바구니 추가하기 -->
	<insert id="geProductInsertBasket" parameterType="Product" >
		insert into basket values (#{basket_num}, #{pro_num}, #{quantity}, sysdate) 
	</insert>
	
	<!-- 메인 장바구니 + 장바구니 추가 중 메인 장바구니 추가 -->
	<insert id="geProductMainBasketInsert" parameterType="Product">
		insert into main_basket values(seq_basket_num.nextval, #{user_id}, sysdate)
	</insert>
	
	<!-- 메인 장바구니 + 장바구니 추가 중 장바구니 추가 전에 basket_num 가져오기-->
	<select id="geProductBasket" parameterType="Product" resultType="int">
		select basket_num from main_basket where user_id = #{user_id}
	</select>
	
	<!-- 메인 장바구니 + 장바구니 추가 중 장바구니 추가 -->
	<insert id="geProductBasketInsert" parameterType="Product">
		insert into basket values(#{basket_num}, #{pro_num}, #{quantity}, sysdate)
	</insert>
	
	<!-- 상품 목록 리스트 - 상품 목록(최신순 정렬) -->
	<select id="geProductListNewest" parameterType="Product" resultType="Product">
	
		SELECT *
			FROM (
			        SELECT rownum rn ,  a.*
			        FROM  (select * from product 
					        where pro_status = 1 
					        and   pro_type1    = #{pro_type1} 
					       <choose>
							    <when test="pro_type2 != '999'">And pro_type2 = #{pro_type2}</when>
							</choose>
					        <choose>
							    <when test="pro_type2 == '999'">And pro_type2 != #{pro_type2}</when>
							</choose>
			        		order by pro_num desc
			        		) a
			     )
		WHERE  rn between #{start} AND  #{end}
	</select>
	
	<!-- 상품 목록 리스트 - 상품 목록(최저가순 정렬) -->
	<select id="geProductListLowest" parameterType="Product" resultType="Product">
		SELECT *
			FROM (
			        SELECT rownum rn ,  a.*
			        FROM  (select * from product 
					        where pro_status = 1 
					        and   pro_type1    = #{pro_type1} 
					       <choose>
							    <when test="pro_type2 != '999'">And pro_type2 = #{pro_type2}</when>
							</choose>
					        <choose>
							    <when test="pro_type2 == '999'">And pro_type2 != #{pro_type2}</when>
							</choose>
			        		order by pro_price 
			        		) a
			     )
		WHERE  rn between #{start} AND  #{end}
	
	
	</select>
	
	<!-- 상품 목록 리스트 - 상품 목록(최고가순 정렬) -->
	<select id="geProductListHighest" parameterType="Product" resultType="Product">
		SELECT *
			FROM (
			        SELECT rownum rn ,  a.*
			        FROM  (select * from product 
					        where pro_status = 1 
					        and   pro_type1    = #{pro_type1} 
					       <choose>
							    <when test="pro_type2 != '999'">And pro_type2 = #{pro_type2}</when>
							</choose>
					        <choose>
							    <when test="pro_type2 == '999'">And pro_type2 != #{pro_type2}</when>
							</choose>
			        		order by pro_price desc
			        		) a
			     )
		WHERE  rn between #{start} AND  #{end}
	</select>
	
	<!-- review(시환) -->
	<select id="jshSearchReview" parameterType="int" resultType="Review">
		select user_id, re_title, re_content, re_pic, re_star 
		from review 
		where pro_num = #{pro_num}
	</select>
	
	<!-- review(시환) -->
	<select id="jshCountPersonalReview" parameterType="Review" resultType="int">
		select Count(re_title) from review where user_id = #{user_id} and pro_num = #{pro_num}
	</select> 
	
	<!-- review(시환) -->
	<delete id="jshReviewDelete" parameterType="Review">
		delete from review where user_id = #{user_id} and pro_num = #{pro_num}
	</delete>
	
	<!-- review(시환) -->
	<insert id="jshReviewInsert" parameterType="Review">
		<if test="#{re_pic} == null">
		INSERT INTO REVIEW 
		(USER_ID, PRO_NUM, RE_TITLE, RE_CONTENT, RE_STAR) VALUES 
		(#{user_id}, #{pro_num}, #{re_title}, #{re_content}, #{re_star})
		</if>
		<if test="#{re_pic} != null">
		INSERT INTO REVIEW (USER_ID, PRO_NUM, RE_TITLE, RE_CONTENT, RE_PIC, RE_STAR) VALUES 
		(#{user_id}, #{pro_num}, #{re_title}, #{re_content}, #{re_pic}, #{re_star})
		</if>
	</insert>
	
	<!-- review(시환) -->
	<select id="jshSearchforUpdate" parameterType="Review" resultType="Review">
		select re_title, re_content, re_pic, re_star 
		from review 
		where user_id = #{user_id} and pro_num = #{pro_num}
	</select>
	
	<!-- review(시환) -->
	<update id="jshReviewUpdate" parameterType="Review">
		<if test="#{re_pic} == null">
		UPDATE REVIEW SET RE_TITLE = #{re_title}, RE_CONTENT = #{re_content},  RE_STAR = #{re_star} where user_id =#{user_id} and pro_num = #{pro_num}
		</if>
		<if test="#{re_pic} != null">
		UPDATE REVIEW SET RE_TITLE = #{re_title}, RE_CONTENT = #{re_content}, RE_PIC = #{re_pic}, RE_STAR = #{re_star} where user_id =#{user_id} and pro_num = #{pro_num}
		</if>
	</update>
	
	<!-- review(시환) -->
	<select id="jshSearchMbPic" parameterType="int" resultType="String">
      select m.user_photo from member m, review r where r.pro_num = #{pro_num} and r.user_id = m.user_id
    </select> 
	
	<!-- review(시환) -->
	<select id="jshCountBuy" parameterType="Review" resultType="int">
      select count(m.quantity) from payment p, MYPAGE m  
      where m.pro_num = #{pro_num} and p.user_id = #{user_id} and p.pay_tot_num = m.pay_tot_num and m.purchase_status = 1
	</select>
	
	
	

</mapper>